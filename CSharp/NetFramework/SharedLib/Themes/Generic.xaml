<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SharedLib.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Thickness x:Key="ControlBorderThickness">2,2,2,2</Thickness>

    <!--#region ControlBorder-->
    <Style x:Key="ControlBorder"
           TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="{StaticResource ControlBorderThickness}"/>
    </Style>
    <!--#endregion ControlBorder-->

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <sys:Double x:Key="NumericUpDown.Button.Width">50</sys:Double>
    <Style x:Key="NumericUpDownButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="splitBorder"
                            Width="{StaticResource NumericUpDown.Button.Width}"
                            Background="{StaticResource TextBox.Static.Background}"
                            BorderBrush="{StaticResource TextBox.Static.Border}"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                        <ContentControl HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}}}"/>
                        <!--<Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{StaticResource ComboBox.Static.Glyph}"
                                  HorizontalAlignment="Center"
                                  Margin="0"
                                  VerticalAlignment="Center"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                        </MultiDataTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </DataTrigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </DataTrigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false">
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDown}">
                    <Border x:Name="border"
                            Style="{StaticResource ControlBorder}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PositiveNegative">
                                <VisualState x:Name="Positive" />
                                <VisualState x:Name="Negative">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_TextBox"
                                                        Storyboard.TargetProperty="Foreground.Color"
                                                        To="Red" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox x:Name="PART_TextBox"
                                     Grid.Column="0"
                                     Grid.Row="0"
                                     Grid.RowSpan="2"
                                     Background="{TemplateBinding Background}"
                                     BorderThickness="0"
                                     VerticalContentAlignment="Center"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     Margin="0"
                                     Padding="{TemplateBinding Padding}">
                            </TextBox>
                            <RepeatButton x:Name="PART_UpButton"
                                          Grid.Column="1"
                                          Grid.Row="0"
                                          Style="{StaticResource NumericUpDownButtonStyle}"
                                          Background="{TemplateBinding Background}"
                                          HorizontalAlignment="Stretch"
                                          Content="U"/>
                            <RepeatButton x:Name="PART_DownButton"
                                          Grid.Column="1"
                                          Grid.Row="1"
                                          Style="{StaticResource NumericUpDownButtonStyle}"
                                          Background="{TemplateBinding Background}"
                                          HorizontalAlignment="Stretch"
                                          Content="D"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
